package com.nwsuaf.plantcontrol;

import android.content.Context;
import android.graphics.Bitmap;
import android.renderscript.Allocation;
import android.renderscript.Element;
import android.renderscript.RenderScript;
import android.renderscript.ScriptIntrinsicBlur;

/**
 * 模糊图片工具
 * 
 * @author 刘林、王俊杰
 */
public class BlurBitmapUtil {
	// 图片缩放比例
	private static final float BITMAP_SCALE = 0.4f;

	/**
	 * 模糊图片
	 * 
	 * @param context
	 *            上下文
	 * @param image
	 *            图片对象
	 * @param blurRadius
	 *            模糊半径
	 * @return Bitmap
	 */
	public static Bitmap blurBitmap(Context context, Bitmap image, float blurRadius) {
		// 计算图片缩小后的长宽
		int width = Math.round(image.getWidth() * BITMAP_SCALE);
		int height = Math.round(image.getHeight() * BITMAP_SCALE);

		// 将缩小后的图片做为预渲染的图片
		Bitmap inputBitmap = Bitmap.createScaledBitmap(image, width, height, false);
		// 创建一张渲染后的输出图片
		Bitmap outputBitmap = Bitmap.createBitmap(inputBitmap);

		// 创建RenderScript内核对象
		RenderScript rs = RenderScript.create(context);
		// 创建一个模糊效果的RenderScript的工具对象
		ScriptIntrinsicBlur blurScript = ScriptIntrinsicBlur.create(rs, Element.U8_4(rs));

		// 由于RenderScript并没有使用VM来分配内存,所以需要使用Allocation类来创建和分配内存空间
		// 创建Allocation对象的时候其实内存是空的,需要使用copyTo()将数据填充进去
		Allocation tmpIn = Allocation.createFromBitmap(rs, inputBitmap);
		Allocation tmpOut = Allocation.createFromBitmap(rs, outputBitmap);

		// 设置渲染的模糊程度, 25f是最大模糊度
		blurScript.setRadius(blurRadius);
		// 设置blurScript对象的输入内存
		blurScript.setInput(tmpIn);
		// 将输出数据保存到输出内存中
		blurScript.forEach(tmpOut);

		// 将数据填充到Allocation中
		tmpOut.copyTo(outputBitmap);

		return outputBitmap;
	}
}
